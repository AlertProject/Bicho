2007-09-06 Daniel Izquierdo Cortazar  <dizquierdo@gsyc.escet.urjc.es>

	* Bicho/SqlBug.py: Modified to use Singleton pattern
	* Bicho/utils.py: Here you can find the class which is the
	singleton and it contains all the options obtained by command line
	* Bicho/backends/sf.py: Modified to use Singleton pattern
	* Bicho/backends/__init__.py: Modified to use Singleton pattern
	* Bicho/Bicho.py: Modified to use Singleton pattern
	* Bicho/main.py: Modified to use Singleton pattern and added options
	for database (output format in bicho)
	
	Added singleton pattern. Now the class Opt_CommandLine has
	a shared variable with values. This class will be use by each object
	which needs to access command line options given by user.


2007-09-06 Daniel Izquierdo Cortazar  <dizquierdo@gsyc.escet.urjc.es>
	
	* Bicho/SqlBug.py: Added simple factory pattern (supporting now
	more databases, but not implemented)
	* Bicho/backends/sf.py: Brief changes made to use that pattern
	* Bicho/main.py: Deleted command line options (they must be added
	in future)

	Added simple factory pattern and cleaned command line options.


2007-09-02 Daniel Izquierdo Cortazar  <dizquierdo@gsyc.escet.urjc.es>

	* Bicho/Bug.py: Cleaning code
	* Bicho/SqlBug.py: Added support only for MySQL using Storm
	* Bicho/backends/sf.py: Comments deleted/Added support for MySQL
	* Bicho/backends/HTMLUtils.py: Cleaning code/Fixed a bug
	* Bicho/backends/ParserSFBugs.py: Cleaning code
	* Bicho/Bicho.py: Cleaning code

	Added support for MySQL access (be careful the string to access
	is hardcoded) and some comments have been deleted.
	

2007-08-29 Daniel Izquierdo Cortazar  <dizquierdo@gsyc.escet.urjc.es>

	* Initial import
	
